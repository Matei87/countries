{"version":3,"sources":["components/Header/Header.js","components/Filters/Filters.js","components/Card/Card.js","components/Cards/Cards.js","pages/HomePage/HomePage.js","pages/CountryDetails/CountryDetails.js","components/Footer/Footer.js","components/theme.js","components/global.js","App.js","serviceWorker.js","index.js"],"names":["Header","theme","toggleTheme","className","onClick","style","color","Filters","this","props","handleCountryChange","valueInputOnChange","options","option","type","placeholder","onChange","value","React","Component","Card","country","region","capital","population","src","flag","alt","name","toLocaleString","to","Cards","countries","map","Fragment","key","label","HomePage","state","valueInput","isLoading","error","setState","e","target","fetch","then","res","json","data","catch","err","localTheme","window","localStorage","getItem","filteredCountries","filter","toLowerCase","includes","role","length","CountryDetails","details","match","params","console","log","obiect","currencies","currency","push","language","languages","timezones","timezone","id","nativeName","Number","subregion","Array","borders","join","topLevelDomain","Footer","Date","getFullYear","lightTheme","body","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","App","setItem","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.30732628.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = ({ theme, toggleTheme }) => {\r\n    return (\r\n        <header className={theme === 'light' ? 'light' : 'dark'} >\r\n            <div className=\"container-fluid\">\r\n                <h2>Where in the world?</h2>\r\n                <button className=\"btn btn-outline-primary\" onClick={toggleTheme}> {theme === 'light' ? <>\r\n                    <i className=\"fas fa-moon\" /> </> : <>\r\n                        <i className=\"fas fa-sun\" style={{ color: 'gold' }} /> </>}</button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Filters.css';\r\n\r\nimport Select from 'react-select';\r\n\r\n\r\nclass Filters extends React.Component {\r\n    render() {\r\n        const { handleCountryChange, valueInputOnChange, options, option, theme } = this.props;\r\n\r\n\r\n        return (\r\n            <div className={theme === 'light' ? 'filters light' : 'filters dark'}>\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Search a country\"\r\n                    onChange={valueInputOnChange}\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                    <Select\r\n                        value={option}\r\n                        options={options}\r\n                        onChange={handleCountryChange}\r\n                        placeholder=\"Filter by Region\"\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filters;","import React from 'react'\r\nimport './Card.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Card extends React.Component {\r\n\r\n    render() {\r\n        const { country, theme } = this.props;\r\n\r\n        if (country.region === '' || country.region === 0) {\r\n            country.region = 'N/A';\r\n        }\r\n        if (country.capital === '' || country.capital === 0) {\r\n            country.capital = 'N/A';\r\n        }\r\n        if (country.population === '' || country.population === 0) {\r\n            country.population = 'N/A';\r\n        }\r\n\r\n        return (\r\n            < div className={theme === 'light' ? 'card light' : 'card dark'} >\r\n                <img className=\"card-img-top\" src={country.flag} alt={country.name} />\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{country.name}</h3>\r\n                    <ul>\r\n                        <li><span>Population</span>: {country.population.toLocaleString()}</li>\r\n                        <li><span>Region</span>: {country.region}</li>\r\n                        <li><span>Capital</span>: {country.capital}</li>\r\n                    </ul>\r\n                    <Link to={`/${country.name}`}>\r\n                        <button className=\"btn btn-outline-primary page-details\">Details</button>\r\n                    </Link >\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Card from '../Card/Card';\r\n\r\n\r\nclass Cards extends React.Component {\r\n    render() {\r\n        const { countries, theme } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    countries.map(country => {\r\n                        return <React.Fragment key={country.name}>\r\n                            <Card country={country} theme={theme} />\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    )\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport './HomePage.css';\r\n\r\nimport Filters from '../../components/Filters/Filters';\r\nimport Cards from '../../components/Cards/Cards';\r\n\r\n\r\nconst options = [\r\n    { value: 'all', label: 'All Countries' },\r\n    { value: 'Africa', label: 'Africa' },\r\n    { value: 'Americas', label: 'America' },\r\n    { value: 'Asia', label: 'Asia' },\r\n    { value: 'Europe', label: 'Europe' },\r\n    { value: 'Oceania', label: 'Oceania' }\r\n];\r\n\r\n\r\nclass HomePage extends React.Component {\r\n    state = {\r\n        countries: [],\r\n        valueInput: '',\r\n        option: { value: 'all', label: 'All Countries' },\r\n        isLoading: false,\r\n        error: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const defaultUrl = 'https://restcountries.eu/rest/v2/?fields=name;capital;population;region;flag';\r\n        fetch(defaultUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({ countries: data, isLoading: true })\r\n            })\r\n            .catch(err => this.setState({ error: true }));\r\n\r\n\r\n        const localTheme = window.localStorage.getItem('theme');\r\n\r\n        if (localTheme) {\r\n            this.setState({ theme: localTheme });\r\n\r\n        } else {\r\n            this.setState({ theme: 'light' })\r\n        }\r\n\r\n    }\r\n\r\n    handleCountryChange = option => {\r\n        this.setState({ option })\r\n    }\r\n\r\n    valueInputOnChange = e => {\r\n        this.setState({ valueInput: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { countries, valueInput, isLoading, option, error } = this.state;\r\n        const { theme } = this.props;\r\n\r\n        let filteredCountries;\r\n        filteredCountries = countries.filter(country => {\r\n            if (option['value'] !== 'all') {\r\n                return country.region === option['value'];\r\n            } else {\r\n                return filteredCountries = this.state.countries;\r\n            }\r\n        })\r\n\r\n        filteredCountries = filteredCountries.filter(country => {\r\n            return country.name.toLowerCase().includes(valueInput.toLowerCase());\r\n        })\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <Filters\r\n                    theme={this.props.theme}\r\n                    handleCountryChange={this.handleCountryChange}\r\n                    valueInputOnChange={this.valueInputOnChange}\r\n                    option={option}\r\n                    options={options}\r\n                />\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"cards\">\r\n\r\n                        {isLoading === false ? <>\r\n                            <div className=\"spinner-border text-light\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </> : filteredCountries.length === 0 ? <>\r\n                            <h2 className={theme === 'light' ? 'h2-center light' : ' h2-center dark'} >Not Found</h2>\r\n                        </> : <Cards countries={filteredCountries} theme={theme} />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './CountryDetails.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass CountryDetails extends React.Component {\r\n    state = {\r\n        details: [],\r\n        isLoading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { country } = this.props.match.params;\r\n\r\n        fetch(`https://restcountries.eu/rest/v2/name/${country}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({ details: data[0], isLoading: true })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const { details, isLoading } = this.state;\r\n        const theme = localStorage.getItem('theme');\r\n\r\n\r\n        const obiect = details.currencies;\r\n        let currency = [];\r\n        for (let key in obiect) {\r\n            currency.push(obiect[key]['name']);\r\n        }\r\n\r\n        const language = details.languages;\r\n        const languages = [];\r\n        for (let key in language) {\r\n            languages.push(language[key]['name']);\r\n        }\r\n        const timezones = details.timezones;\r\n        let timezone = [];\r\n        for (let key in timezones) {\r\n            timezone.push(timezones[key]);\r\n        }\r\n\r\n        return (\r\n            <>{isLoading === false ? <>\r\n                <div className=\"spinner-border text-light\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </> : <div className=\"container-fluid\" id=\"countryDetails\">\r\n                    <Link\r\n                        to=\"/\"\r\n                        className=\"btn btn-outline-primary page-back\">\r\n                        <i className=\"fas fa-arrow-left\" /> Back\r\n                </Link>\r\n\r\n                    <div className={theme === 'light' ? 'row light' : 'row dark'}>\r\n\r\n                        <div className=\"col-md-6 first-col\">\r\n                            <img src={details.flag} alt={details.name} />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 second-col\">\r\n                            <h1 className='country-name'>{details.name}</h1>\r\n                            <div className=\"col-md-6\">\r\n                                <ul >\r\n                                    <li><span>Native Name:</span> {details.nativeName}</li>\r\n                                    <li><span>Population:</span> {Number(details.population).toLocaleString()}</li>\r\n                                    <li><span>Region:</span> {details.region}</li>\r\n                                    <li><span>Sub Region:</span> {details.subregion}</li>\r\n                                    <li><span>Capital:</span> {details.capital}</li>\r\n                                    <li><span>Border:</span> {Array(details.borders).join(', ')}</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <ul>\r\n                                    <li><span>Net Domain:</span> {details.topLevelDomain}</li>\r\n                                    <li><span>Currency:</span>  {currency.join(', ')}</li>\r\n                                    <li><span>Languages:</span> {languages.join(', ')}</li>\r\n                                    <li><span>Time Zone:</span> {timezone[0]}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>}</>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryDetails;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return <footer>Made by&nbsp;<p>Matei Mircea</p>&nbsp; @ {new Date().getFullYear()}</footer>\r\n}\r\nexport default Footer;\r\n","export const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#212529',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n}\r\n\r\nexport const darkTheme = {\r\n    body: '#282c34',\r\n    text: '#212529',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n* {\r\n    margin: 0; padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Nunito Sans', sans-serif;\r\n  }\r\n\r\n  body {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }`;","import React from 'react';\nimport Header from './components/Header/Header';\n\n\nimport HomePage from './pages/HomePage/HomePage';\nimport CountryDetails from './pages/CountryDetails/CountryDetails';\nimport Footer from './components/Footer/Footer';\n\n\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './components/theme';\nimport { GlobalStyles } from './components/global';\n\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends React.Component {\n  state = {\n    theme: 'light'\n  }\n\n\n  componentDidMount() {\n    let localTheme = window.localStorage.getItem('theme');\n    localTheme ? this.setState({ theme: localTheme }) : this.setState({ theme: 'light' })\n  }\n\n\n  toggleTheme = () => {\n    const { theme } = this.state;\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      this.setState({ theme: 'dark' })\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      this.setState({ theme: 'light' })\n    }\n  }\n\n\n  render() {\n    const { theme } = this.state;\n\n    return (\n      <Router>\n        <Switch>\n          <>\n            <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n              <GlobalStyles />\n\n              <Header toggleTheme={this.toggleTheme} theme={theme} />\n\n\n              <Route exact path=\"/\" >\n                <HomePage theme={theme} />\n              </Route>\n\n              <Route exact path=\"/:country\" component={CountryDetails} />\n\n              <Footer />\n            </ThemeProvider>\n          </>\n        </Switch>\n      </Router >\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}