{"version":3,"sources":["components/Header/Header.js","components/Filters/Filters.js","components/CountryDetails/CountryDetails.js","components/Card/Card.js","components/Cards/Cards.js","components/Footer/Footer.js","components/theme.js","components/global.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","theme","onClick","toggleTheme","style","color","Filters","this","changeUrl","valueInputOnChange","type","placeholder","onChange","htmlFor","id","value","defaultValue","React","Component","CountryDetails","state","details","country","fetch","then","res","json","data","setState","catch","err","console","log","obiect","currencies","currency","key","push","language","languages","timezones","timezone","to","src","flag","alt","name","nativeName","Number","population","toLocaleString","region","subregion","capital","Array","borders","join","topLevelDomain","Card","Cards","countries","map","Fragment","Footer","Date","getFullYear","lightTheme","body","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","App","valueInput","defaultUrl","isLoading","error","window","localStorage","setItem","e","target","localTheme","getItem","filteredCountries","filter","toLowerCase","includes","exact","path","defaultvalue","role","length","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fa4066a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={props.theme === 'light' ? 'light' : 'dark'} >\r\n            <div className=\"container-fluid\">\r\n                <h2>Where in the world?</h2>\r\n                <button className=\"btn btn-outline-primary\" onClick={props.toggleTheme} >{props.theme === 'light' ? <>\r\n                    <i className=\"fas fa-moon\" /> </> : <>\r\n                        <i className=\"fas fa-sun\" style={{ color: 'gold' }} /> </>}</button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Filters.css';\r\n\r\n\r\nclass Filters extends React.Component {\r\n    render() {\r\n        const { changeUrl, valueInputOnChange } = this.props;\r\n\r\n        return (\r\n            <div className={this.props.theme === 'light' ? 'filters light' : 'filters dark'}>\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Search a country\"\r\n                    onChange={valueInputOnChange}\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"valuelabel\"></label>\r\n                    <select\r\n                        id=\"valuelabel\"\r\n                        onChange={changeUrl}\r\n                        className=\"custom-select custom-select-lg\"\r\n                    >\r\n\r\n                        <option value=\"https://restcountries.eu/rest/v2/?fields=name;capital;population;region;flag\" defaultValue>All Countries</option>\r\n                        <option value=\"https://restcountries.eu/rest/v2/region/africa?fields=name;capital;population;region;flag\">Africa</option>\r\n                        <option value=\"https://restcountries.eu/rest/v2/region/americas?fields=name;capital;population;region;flag\">America</option>\r\n                        <option value=\"https://restcountries.eu/rest/v2/region/asia?fields=name;capital;population;region;flag\">Asia</option>\r\n                        <option value=\"https://restcountries.eu/rest/v2/region/europe?fields=name;capital;population;region;flag\">Europe</option>\r\n                        <option value=\"https://restcountries.eu/rest/v2/region/oceania?fields=name;capital;population;region;flag\">Oceania</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport './CountryDetails.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CountryDetails extends React.Component {\r\n    state = {\r\n        details: []\r\n    }\r\n    componentDidMount() {\r\n        const { country } = this.props;\r\n        fetch(country)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({ details: data[0] })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const { details } = this.state;\r\n        const { theme } = this.props;\r\n\r\n        const obiect = details.currencies;\r\n        let currency = [];\r\n        for (let key in obiect) {\r\n            currency.push(obiect[key]['name']);\r\n        }\r\n\r\n        const language = details.languages;\r\n        const languages = [];\r\n        for (let key in language) {\r\n            languages.push(language[key]['name']);\r\n        }\r\n        const timezones = details.timezones;\r\n        let timezone = [];\r\n        for (let key in timezones) {\r\n            timezone.push(timezones[key]);\r\n        }\r\n\r\n        return (\r\n            <div className=\"container-fluid\" id=\"countryDetails\">\r\n                <Link\r\n                    to=\"/\"\r\n                    className=\"btn btn-outline-primary page-back\">\r\n                    <i className=\"fas fa-arrow-left\" /> Back\r\n                    </Link>\r\n\r\n                <div className={theme === 'light' ? 'row light' : 'row dark'}>\r\n\r\n                    <div className=\"col-md-6 first-col\">\r\n                        <img src={details.flag} alt={details.name} />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 second-col\">\r\n                        <h1 className='country-name'>{details.name}</h1>\r\n                        <div className=\"col-md-6\">\r\n                            <ul >\r\n                                <li><span>Native Name:</span> {details.nativeName}</li>\r\n                                <li><span>Population:</span> {Number(details.population).toLocaleString()}</li>\r\n                                <li><span>Region:</span> {details.region}</li>\r\n                                <li><span>Sub Region:</span> {details.subregion}</li>\r\n                                <li><span>Capital:</span> {details.capital}</li>\r\n                                <li><span>Border:</span> {Array(details.borders).join(', ')}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <ul>\r\n                                <li><span>Net Domain:</span> {details.topLevelDomain}</li>\r\n                                <li><span>Currency:</span>  {currency.join(', ')}</li>\r\n                                <li><span>Languages:</span> {languages.join(', ')}</li>\r\n                                <li><span>Time Zone:</span> {timezone[0]}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryDetails;\r\n","import React from 'react'\r\nimport './Card.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Card extends React.Component {\r\n\r\n    render() {\r\n        const { country, theme } = this.props;\r\n\r\n        if (country.region === '' || country.region === 0) {\r\n            country.region = 'N/A';\r\n        }\r\n        if (country.capital === '' || country.capital === 0) {\r\n            country.capital = 'N/A';\r\n        }\r\n        if (country.population === '' || country.population === 0) {\r\n            country.population = 'N/A';\r\n        }\r\n\r\n        return (\r\n            < div className={theme === 'light' ? 'card light' : 'card dark'} >\r\n                <img className=\"card-img-top\" src={country.flag} alt={country.name} />\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{country.name}</h3>\r\n                    <ul>\r\n                        <li><span>Population</span>: {country.population.toLocaleString()}</li>\r\n                        <li><span>Region</span>: {country.region}</li>\r\n                        <li><span>Capital</span>: {country.capital}</li>\r\n                    </ul>\r\n                    <Link to={`/${country.name}`}>\r\n                        <button className=\"btn btn-outline-primary page-details\">Details</button>\r\n                    </Link >\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Card from '../Card/Card';\r\n\r\n\r\nclass Cards extends React.Component {\r\n    render() {\r\n        const { countries, theme } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    countries.map(country => {\r\n                        return <React.Fragment key={country.name}>\r\n                            <Card country={country} theme={theme} />\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    )\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return <footer>Made by&nbsp;<p>Matei Mircea</p>&nbsp; @ {new Date().getFullYear()}</footer>\r\n}\r\nexport default Footer;\r\n","export const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#212529',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n}\r\n\r\nexport const darkTheme = {\r\n    body: '#282c34',\r\n    text: '#212529',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n* {\r\n    margin: 0; padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Nunito Sans', sans-serif;\r\n  }\r\n\r\n  body {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }`;","import React from 'react';\nimport Header from './components/Header/Header';\nimport Filters from './components/Filters/Filters';\nimport CountryDetails from './components/CountryDetails/CountryDetails';\nimport Cards from './components/Cards/Cards';\nimport Footer from './components/Footer/Footer';\n\n\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './components/theme';\nimport { GlobalStyles } from './components/global';\n\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends React.Component {\n  state = {\n    countries: [],\n    valueInput: '',\n    defaultUrl: 'https://restcountries.eu/rest/v2/?fields=name;capital;population;region;flag',\n    theme: 'light',\n    isLoading: false,\n    error: false\n  }\n\n  componentDidMount() {\n    const { defaultUrl } = this.state;\n    fetch(defaultUrl)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ countries: data, isLoading: true })\n      })\n      .catch(err => this.setState({ error: true }));\n\n\n    const localTheme = window.localStorage.getItem('theme');\n    if (localTheme) {\n      this.setState({ theme: localTheme });\n    } else {\n      this.setState({ theme: 'light' })\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    const { defaultUrl } = this.state;\n    fetch(defaultUrl)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ countries: data, isLoading: true })\n      })\n      .catch(err => this.setState({ error: true }));\n\n\n  }\n\n  toggleTheme = () => {\n    const { theme } = this.state;\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      this.setState({ theme: 'dark' })\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      this.setState({ theme: 'light' })\n    }\n  }\n\n  changeUrl = e => {\n    this.setState({ defaultUrl: e.target.value })\n  }\n\n  valueInputOnChange = e => {\n    this.setState({ valueInput: e.target.value })\n  }\n\n\n  render() {\n    const { countries, valueInput, isLoading } = this.state;\n\n    let filteredCountries = countries.filter(country => {\n      return country.name.toLowerCase().includes(valueInput.toLowerCase());\n    })\n\n    return (\n      <Router>\n        <Switch>\n          <>\n            <ThemeProvider theme={this.state.theme === 'light' ? lightTheme : darkTheme}>\n              <GlobalStyles />\n\n              <Header toggleTheme={this.toggleTheme} theme={this.state.theme} />\n              <div className=\"container-fluid\">\n\n                <Route exact path=\"/\" >\n                  <Filters\n                    theme={this.state.theme}\n                    changeUrl={this.changeUrl}\n                    defaultvalue={this.state.defaultvalue}\n                    countries={this.state.countries}\n                    valueInputOnChange={this.valueInputOnChange}\n                  />\n\n                  <div className=\"row\">\n                    <div className=\"cards\">\n                      {isLoading === false ? <>\n                        <div className=\"spinner-border text-light\" role=\"status\">\n                          <span className=\"sr-only\">Loading...</span>\n                        </div>\n                      </> : filteredCountries.length === 0 ? <>\n                        <h2 className={this.state.theme === 'light' ? 'h2-center light' : ' h2-center dark'} >Not Found</h2>\n                      </> : <>  <Cards countries={filteredCountries} theme={this.state.theme} /> </>}\n                    </div>\n                  </div>\n                </Route>\n              </div>\n\n              {countries.map(country => {\n                return <Route exact path={`/${country.name}`} key={country.name} theme={this.state.theme}>\n                  <CountryDetails country={`https://restcountries.eu/rest/v2/name/${country.name}`} theme={this.state.theme} />\n                </Route>\n              })}\n\n              <Footer />\n            </ThemeProvider>\n          </>\n        </Switch>\n      </Router >\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}